{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebile/Desktop/nft-gallery/src/config/wagmi.ts"],"sourcesContent":["import { getDefaultConfig } from \"@rainbow-me/rainbowkit\";\nimport { mainnet, polygon, optimism, arbitrum, base } from \"wagmi/chains\";\n\nexport const wagmiConfig = getDefaultConfig({\n  appName: \"nft-gallery\",\n  projectId: \"61b300ca49d437366caff2fd3d46f73c\",\n  chains: [mainnet, polygon, optimism, arbitrum, base],\n  ssr: true,\n});\n\nexport const supportedChains = [mainnet, polygon, optimism, arbitrum, base];\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;AAEO,MAAM,cAAc,CAAA,GAAA,8KAAA,CAAA,mBAAgB,AAAD,EAAE;IAC1C,SAAS;IACT,WAAW;IACX,QAAQ;QAAC,gKAAA,CAAA,UAAO;QAAE,gKAAA,CAAA,UAAO;QAAE,iKAAA,CAAA,WAAQ;QAAE,iKAAA,CAAA,WAAQ;QAAE,6JAAA,CAAA,OAAI;KAAC;IACpD,KAAK;AACP;AAEO,MAAM,kBAAkB;IAAC,gKAAA,CAAA,UAAO;IAAE,gKAAA,CAAA,UAAO;IAAE,iKAAA,CAAA,WAAQ;IAAE,iKAAA,CAAA,WAAQ;IAAE,6JAAA,CAAA,OAAI;CAAC","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebile/Desktop/nft-gallery/src/context/WalletContext.tsx"],"sourcesContent":["\"use client\";\n\nimport { WalletContextType } from \"@/types\";\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode,\n} from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useAccount, useConnect, useDisconnect } from \"wagmi\";\nimport { injected } from \"wagmi/connectors\";\n\nconst WalletContext = createContext<WalletContextType | undefined>(undefined);\n\nexport const useWallet = () => {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error(\"useWallet must be used within a WalletProvider\");\n  }\n  return context;\n};\n\ninterface WalletProviderProps {\n  children: ReactNode;\n}\n\nexport const WalletProvider: React.FC<WalletProviderProps> = ({ children }) => {\n  const { address, isConnected, chainId } = useAccount();\n  const { connect, isPending: isConnecting } = useConnect();\n  const { disconnect } = useDisconnect();\n  const [balance, setBalance] = useState<string | null>(null);\n\n  const shortAddress = address\n    ? `${address.slice(0, 6)}...${address.slice(-4)}`\n    : null;\n\n  const handleConnect = async () => {\n    try {\n      connect({ connector: injected() });\n      toast.success(\"Wallet connected successfully\");\n    } catch (error) {\n      console.error(\"Wallet connection failed:\", error);\n      toast.error(\"Wallet connection failed. Please try again.\");\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n    setBalance(null);\n  };\n\n  useEffect(() => {\n    if (address && isConnected) {\n      setBalance(\"1.234\");\n    }\n  }, [address, isConnected]);\n\n  useEffect(() => {\n    console.log(\"Wagmi account info:\", { address, isConnected, chainId });\n  }, [address, isConnected, chainId]);\n\n  const value: WalletContextType = {\n    address: address || null,\n    isConnected,\n    isConnecting,\n    connect: handleConnect,\n    disconnect: handleDisconnect,\n    shortAddress,\n    balance,\n    chainId: chainId || null,\n  };\n\n  return (\n    <WalletContext.Provider value={value}>{children}</WalletContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAGA;AAOA;AACA;AAAA;AAAA;AACA;AAZA;;;;;;AAcA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAiC;AAE5D,MAAM,YAAY;IACvB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAMO,MAAM,iBAAgD,CAAC,EAAE,QAAQ,EAAE;IACxE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IACnD,MAAM,EAAE,OAAO,EAAE,WAAW,YAAY,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IACtD,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,MAAM,eAAe,UACjB,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI,GAC/C;IAEJ,MAAM,gBAAgB;QACpB,IAAI;YACF,QAAQ;gBAAE,WAAW,CAAA,GAAA,wKAAA,CAAA,WAAQ,AAAD;YAAI;YAChC,mJAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAChB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,mBAAmB;QACvB;QACA,WAAW;IACb;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,WAAW,aAAa;YAC1B,WAAW;QACb;IACF,GAAG;QAAC;QAAS;KAAY;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,uBAAuB;YAAE;YAAS;YAAa;QAAQ;IACrE,GAAG;QAAC;QAAS;QAAa;KAAQ;IAElC,MAAM,QAA2B;QAC/B,SAAS,WAAW;QACpB;QACA;QACA,SAAS;QACT,YAAY;QACZ;QACA;QACA,SAAS,WAAW;IACtB;IAEA,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAE3C","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/sebile/Desktop/nft-gallery/src/app/layout.tsx"],"sourcesContent":["\"use client\";\n\nimport { WagmiProvider } from \"wagmi\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { RainbowKitProvider, darkTheme } from \"@rainbow-me/rainbowkit\";\nimport { wagmiConfig } from \"../config/wagmi\";\nimport { WalletProvider } from \"@/context/WalletContext\";\nimport \"@rainbow-me/rainbowkit/styles.css\";\nimport \"./globals.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst queryClient = new QueryClient();\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body className=\"bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 min-h-screen\">\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={true}\n          closeButton={false}\n          newestOnTop={true}\n          theme=\"dark\"\n        />\n        <WagmiProvider config={wagmiConfig}>\n          <QueryClientProvider client={queryClient}>\n            <RainbowKitProvider\n              theme={darkTheme({\n                accentColor: \"#8b5cf6\",\n                accentColorForeground: \"white\",\n                borderRadius: \"large\",\n                fontStack: \"system\",\n                overlayBlur: \"small\",\n              })}\n            >\n              <WalletProvider>{children}</WalletProvider>\n            </RainbowKitProvider>\n          </QueryClientProvider>\n        </WagmiProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AAVA;;;;;;;;;;;AAYA,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW;AAEpB,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC,mJAAA,CAAA,iBAAc;oBACb,UAAS;oBACT,WAAW;oBACX,iBAAiB;oBACjB,aAAa;oBACb,aAAa;oBACb,OAAM;;;;;;8BAER,8OAAC,+IAAA,CAAA,gBAAa;oBAAC,QAAQ,sHAAA,CAAA,cAAW;8BAChC,cAAA,8OAAC,sLAAA,CAAA,sBAAmB;wBAAC,QAAQ;kCAC3B,cAAA,8OAAC,8KAAA,CAAA,qBAAkB;4BACjB,OAAO,CAAA,GAAA,0KAAA,CAAA,YAAS,AAAD,EAAE;gCACf,aAAa;gCACb,uBAAuB;gCACvB,cAAc;gCACd,WAAW;gCACX,aAAa;4BACf;sCAEA,cAAA,8OAAC,gIAAA,CAAA,iBAAc;0CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/B","debugId":null}}]
}